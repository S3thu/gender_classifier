# -*- coding: utf-8 -*-
"""gender_Identifier.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PwDijz67Ds_h6JiQm_TIAByiyFM65qU7
"""

!pip install fastbook

from fastbook import *
from fastai import *
from fastai.vision.widgets import *

people_type = 'female','male'
path = Path('people')

if not path.exists():
  path.mkdir()
  for o in people_type:
    dest = (path/o)
    dest.mkdir(exist_ok=True)
    results = search_images_ddg(f'face of {o}',max_images=50)
    download_images(dest,urls=results,max_pics=50)

fns = get_image_files(path)
failed = verify_images(fns)
failed.map(Path.unlink)

people = DataBlock(
    blocks=(ImageBlock, CategoryBlock),
    get_items=get_image_files,
    splitter = RandomSplitter(valid_pct=0.2,seed=42),
    get_y=parent_label,
    item_tfms=Resize(128)
)

people = people.new(
    item_tfms=RandomResizedCrop(224,min_scale=0.5),
    batch_tfms=aug_transforms()
)
dls = people.dataloaders(path)

learn = vision_learner(dls,resnet50, metrics=accuracy)

learn.fine_tune(5)

interp = ClassificationInterpretation.from_learner(learn)
interp.plot_confusion_matrix()

interp.plot_top_losses(10, nrows=2, figsize=(18,8))
plt.rcParams.update({'font.size': 8})

interp.most_confused()

learn.export()

path = Path()
path.ls(file_exts='.pkl')

learn_inf = load_learner(path/'export.pkl')

learn_inf.dls.vocab

btn_upload = widgets.FileUpload()
btn_upload

img = PILImage.create(btn_upload.data[-1])

"""lbl_pred = widgets.Label()
lbl_pred.value = f'Prediction: {pred}; Probability: {probs[pred_idx]:.04f}'
lbl_pred
"""

out_pl = widgets.Output()
out_pl.clear_output()
with out_pl: display(img.to_thumb(128,128))
out_pl

pred,pred_idx,probs = learn_inf.predict(img)

lbl_pred = widgets.Label()
lbl_pred.value = f'Prediction: {pred}; Probability: {probs[pred_idx]:.04f}'
lbl_pred

btn_run = widgets.Button(description='Classify')
btn_run

def on_click_classify(change):
    img = PILImage.create(btn_upload.data[-1])
    out_pl.clear_output()
    with out_pl: display(img.to_thumb(128,128))
    pred,pred_idx,probs = learn_inf.predict(img)
    lbl_pred.value = f'Prediction: {pred}; Probability: {probs[pred_idx]:.04f}'

btn_run.on_click(on_click_classify)

VBox([widgets.Label('Upload a picture'), 
      btn_upload, btn_run, out_pl, lbl_pred])